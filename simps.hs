-- Simplification functions

-- TODO: simpSubP, simpAddN and simpSubN do not remove all leading zeros.

-- Zeckendorf addition, manually optimized
simpAddM :: [Int] -> [Int]
simpAddM xs = c0 xs id where
    n f c = f . (c:)
    c0 []     a     = a []
    c0 (0:zs) a     = c1 zs (n a 0) (n a 1) (n a 1)
    c0 (1:zs) a     = c3 zs (n a 1) (n a 0) (n a 0)
    c0 (2:zs) a     = c4 zs (n a 0) (n a 1)
    c1 []     a b c = a []
    c1 (0:zs) a b c = c1 zs (n a 0) (n a 1) (n b 0)
    c1 (1:zs) a b c = c3 zs (n a 1) (n c 0) (n a 0)
    c1 (2:zs) a b c = c4 zs (n c 0) (n a 1)
    c2 []     a b c = a []
    c2 (0:zs) a b c = c1 zs (n a 0) (n a 1) (n b 1)
    c2 (1:zs) a b c = c3 zs (n a 1) (n c 0) (n a 0)
    c2 (2:zs) a b c = c4 zs (n c 0) (n a 1)
    c3 []     a b c = a []
    c3 (0:zs) a b c = c2 zs (n a 0) (n c 0) (n b 1)
    c3 (1:zs) a b c = c4 zs (n c 0) (n a 0)
    c3 (2:zs) a b c = c5 zs (n c 0) (n c 1)
    c4 []     a b   = a [1]
    c4 (0:zs) a b   = c3 zs (n a 1) (n b 0) (n a 0)
    c4 (1:zs) a b   = c4 zs (n b 0) (n a 1)
    c4 (2:zs) a b   = c5 zs (n b 0) (n b 1)
    c5 []     a b   = a [0,1]
    c5 (0:zs) a b   = c4 zs (n a 0) (n b 0)

-- Zeckendorf addition, generated
simpAddP :: [Int] -> [Int]
simpAddP = c0 id where
    n f c = f . (c :)
    c0 r0 [] = r0 []
    c0 r0 (0 : xs) = c7 (n r0 1) (n r0 0) xs
    c0 r0 (1 : xs) = c4 (n r0 0) (n r0 1) xs
    c0 r0 (2 : xs) = c5 (n r0 0) (n r0 1) xs
    c1 r1 r4 r7 [] = r7 []
    c1 r1 r4 r7 (0 : xs) = c6 (n r1 1) (n r7 1) (n r7 0) xs
    c1 r1 r4 r7 (1 : xs) = c2 (n r4 0) (n r7 1) (n r7 0) xs
    c1 r1 r4 r7 (2 : xs) = c5 (n r4 0) (n r7 1) xs
    c2 r1 r8 r9 [] = r8 []
    c2 r1 r8 r9 (0 : xs) = c1 (n r9 0) (n r1 1) (n r8 0) xs
    c2 r1 r8 r9 (1 : xs) = c8 (n r8 0) (n r9 0) xs
    c3 r1 r8 r14 [] = r8 []
    c3 r1 r8 r14 (0 : xs) = c1 (n r14 0) (n r1 1) (n r8 0) xs
    c3 r1 r8 r14 (1 : xs) = c8 (n r8 0) (n r14 0) xs
    c3 r1 r8 r14 (2 : xs) = c10 (n r14 1) (n r14 0) xs
    c4 r2 r8 [] = r8 []
    c4 r2 r8 (0 : xs) = c1 (n r2 0) (n r2 1) (n r8 0) xs
    c4 r2 r8 (1 : xs) = c8 (n r8 0) (n r2 0) xs
    c5 r3 r10 [] = c5 r3 r10 [0]
    c5 r3 r10 (0 : xs) = c3 (n r10 0) (n r3 1) (n r3 0) xs
    c6 r4 r5 r7 [] = r7 []
    c6 r4 r5 r7 (0 : xs) = c6 (n r5 0) (n r7 1) (n r7 0) xs
    c6 r4 r5 r7 (1 : xs) = c2 (n r4 0) (n r7 1) (n r7 0) xs
    c6 r4 r5 r7 (2 : xs) = c5 (n r4 0) (n r7 1) xs
    c7 r6 r7 [] = r7 []
    c7 r6 r7 (0 : xs) = c6 (n r6 0) (n r7 1) (n r7 0) xs
    c7 r6 r7 (1 : xs) = c2 (n r6 0) (n r7 1) (n r7 0) xs
    c7 r6 r7 (2 : xs) = c5 (n r6 0) (n r7 1) xs
    c8 r9 r11 [] = c8 r9 r11 [0]
    c8 r9 r11 (0 : xs) = c3 (n r9 0) (n r11 1) (n r11 0) xs
    c8 r9 r11 (1 : xs) = c8 (n r11 1) (n r9 0) xs
    c9 r11 r14 [] = c9 r11 r14 [0]
    c9 r11 r14 (0 : xs) = c3 (n r14 0) (n r11 1) (n r11 0) xs
    c9 r11 r14 (1 : xs) = c8 (n r11 1) (n r14 0) xs
    c9 r11 r14 (2 : xs) = c10 (n r14 1) (n r14 0) xs
    c10 r12 r13 [] = c10 r12 r13 [0]
    c10 r12 r13 (0 : xs) = c9 (n r13 0) (n r12 0) xs

-- Zeckendorf subtraction, generated
simpSubP :: [Int] -> [Int]
simpSubP = c0 id where
    n f c = f . (c :)
    c0 r0 [] = r0 []
    c0 r0 (-1 : xs) = c12 (n r0 1) (n r0 0) xs
    c0 r0 (0 : xs) = c13 (n r0 1) (n r0 0) xs
    c0 r0 (1 : xs) = c10 (n r0 0) (n r0 1) xs
    c1 r1 r2 [] = c1 r1 r2 [0]
    c1 r1 r2 (-1 : xs) = c2 (n r2 0) (n r2 1) xs
    c1 r1 r2 (0 : xs) = c4 (n r1 0) (n r2 1) (n r2 0) xs
    c1 r1 r2 (1 : xs) = c5 (n r1 1) (n r1 0) xs
    c2 r1 r7 [] = c2 r1 r7 [0]
    c2 r1 r7 (0 : xs) = c1 (n r7 0) (n r1 0) xs
    c2 r1 r7 (1 : xs) = c5 (n r1 1) (n r1 0) xs
    c3 r1 r10 [] = c3 r1 r10 [0]
    c3 r1 r10 (0 : xs) = c4 (n r1 0) (n r10 1) (n r10 0) xs
    c3 r1 r10 (1 : xs) = c5 (n r1 1) (n r1 0) xs
    c4 r2 r8 r9 [] = c4 r2 r8 r9 [0]
    c4 r2 r8 r9 (-1 : xs) = c2 (n r2 0) (n r2 1) xs
    c4 r2 r8 r9 (0 : xs) = c4 (n r8 0) (n r2 1) (n r2 0) xs
    c4 r2 r8 r9 (1 : xs) = c7 (n r8 0) (n r9 0) xs
    c5 r3 r4 [] = r4 []
    c5 r3 r4 (-1 : xs) = c3 (n r3 0) (n r4 0) xs
    c5 r3 r4 (0 : xs) = c6 (n r4 1) (n r3 0) (n r4 0) xs
    c6 r3 r9 r13 [] = r13 []
    c6 r3 r9 r13 (-1 : xs) = c3 (n r3 0) (n r13 0) xs
    c6 r3 r9 r13 (0 : xs) = c6 (n r13 1) (n r3 0) (n r13 0) xs
    c6 r3 r9 r13 (1 : xs) = c9 (n r9 0) (n r13 1) (n r13 0) xs
    c7 r4 r5 [] = r4 []
    c7 r4 r5 (-1 : xs) = c11 (n r5 1) (n r5 0) (n r4 0) xs
    c7 r4 r5 (0 : xs) = c6 (n r4 1) (n r5 1) (n r4 0) xs
    c8 r5 r9 r13 [] = r13 []
    c8 r5 r9 r13 (-1 : xs) = c11 (n r5 1) (n r5 0) (n r13 0) xs
    c8 r5 r9 r13 (0 : xs) = c6 (n r13 1) (n r5 1) (n r13 0) xs
    c8 r5 r9 r13 (1 : xs) = c9 (n r9 0) (n r13 1) (n r13 0) xs
    c9 r5 r14 r15 [] = r14 []
    c9 r5 r14 r15 (-1 : xs) = c11 (n r5 1) (n r5 0) (n r14 0) xs
    c9 r5 r14 r15 (0 : xs) = c8 (n r15 0) (n r5 1) (n r14 0) xs
    c10 r6 r14 [] = r14 []
    c10 r6 r14 (-1 : xs) = c11 (n r6 1) (n r6 0) (n r14 0) xs
    c10 r6 r14 (0 : xs) = c8 (n r6 0) (n r6 1) (n r14 0) xs
    c11 r8 r9 r10 [] = c11 r8 r9 r10 [0]
    c11 r8 r9 r10 (0 : xs) = c4 (n r8 0) (n r10 1) (n r10 0) xs
    c11 r8 r9 r10 (1 : xs) = c7 (n r8 0) (n r9 0) xs
    c12 r8 r11 [] = c12 r8 r11 [0]
    c12 r8 r11 (0 : xs) = c4 (n r8 0) (n r11 1) (n r11 0) xs
    c12 r8 r11 (1 : xs) = c7 (n r8 0) (n r11 0) xs
    c13 r12 r13 [] = r13 []
    c13 r12 r13 (-1 : xs) = c3 (n r12 0) (n r13 0) xs
    c13 r12 r13 (0 : xs) = c6 (n r13 1) (n r12 0) (n r13 0) xs
    c13 r12 r13 (1 : xs) = c9 (n r12 0) (n r13 1) (n r13 0) xs

-- Nega-Zeckendorf addition, generated
simpAddN :: [Int] -> [Int]
simpAddN = c0 id where
    n f c = f . (c :)
    c0 r0 [] = r0 []
    c0 r0 (0 : xs) = c9 (n r0 0) (n r0 1) xs
    c0 r0 (1 : xs) = c8 (n r0 1) (n r0 0) xs
    c0 r0 (2 : xs) = c2 (n r0 1) (n r0 0) xs
    c1 r1 r5 [] = r5 []
    c1 r1 r5 (0 : xs) = c3 (n r1 0) (n r5 0) xs
    c2 r1 r11 [] = c2 r1 r11 [0]
    c2 r1 r11 (0 : xs) = c4 (n r1 0) (n r11 1) (n r11 0) xs
    c3 r2 r4 [] = r4 []
    c3 r2 r4 (0 : xs) = c6 (n r4 0) (n r2 0) (n r4 1) xs
    c3 r2 r4 (1 : xs) = c8 (n r4 1) (n r2 0) xs
    c3 r2 r4 (2 : xs) = c2 (n r2 1) (n r2 0) xs
    c4 r2 r6 r7 [] = c4 r2 r6 r7 [0]
    c4 r2 r6 r7 (0 : xs) = c7 (n r7 1) (n r2 0) (n r6 0) xs
    c4 r2 r6 r7 (1 : xs) = c10 (n r2 0) (n r6 0) xs
    c4 r2 r6 r7 (2 : xs) = c2 (n r2 1) (n r2 0) xs
    c5 r3 r4 [] = r4 []
    c5 r3 r4 (0 : xs) = c6 (n r4 0) (n r3 0) (n r4 1) xs
    c5 r3 r4 (1 : xs) = c8 (n r4 1) (n r3 0) xs
    c6 r4 r8 r12 [] = r4 []
    c6 r4 r8 r12 (0 : xs) = c6 (n r4 0) (n r12 0) (n r4 1) xs
    c6 r4 r8 r12 (1 : xs) = c8 (n r4 1) (n r12 0) xs
    c6 r4 r8 r12 (2 : xs) = c2 (n r8 0) (n r12 0) xs
    c7 r5 r8 r13 [] = r5 []
    c7 r5 r8 r13 (0 : xs) = c3 (n r13 0) (n r5 0) xs
    c7 r5 r8 r13 (1 : xs) = c5 (n r13 1) (n r13 0) xs
    c7 r5 r8 r13 (2 : xs) = c1 (n r8 0) (n r13 1) xs
    c8 r5 r10 [] = r5 []
    c8 r5 r10 (0 : xs) = c3 (n r10 0) (n r5 0) xs
    c8 r5 r10 (1 : xs) = c5 (n r10 1) (n r10 0) xs
    c9 r9 r12 [] = r9 []
    c9 r9 r12 (0 : xs) = c6 (n r9 0) (n r12 0) (n r9 1) xs
    c9 r9 r12 (1 : xs) = c8 (n r9 1) (n r12 0) xs
    c9 r9 r12 (2 : xs) = c2 (n r9 0) (n r12 0) xs
    c10 r10 r11 [] = c10 r10 r11 [0]
    c10 r10 r11 (0 : xs) = c4 (n r10 0) (n r11 1) (n r11 0) xs
    c10 r10 r11 (1 : xs) = c5 (n r10 1) (n r10 0) xs

-- Nega-Zeckendorf subtraction, generated
simpSubN :: [Int] -> [Int]
simpSubN = c0 id where
    n f c = f . (c :)
    c0 r0 [] = r0 []
    c0 r0 (-1 : xs) = c3 (n r0 1) (n r0 0) xs
    c0 r0 (0 : xs) = c7 (n r0 0) (n r0 1) xs
    c0 r0 (1 : xs) = c1 (n r0 1) (n r0 0) xs
    c1 r1 r6 [] = r1 []
    c1 r1 r6 (-1 : xs) = c3 (n r6 1) (n r6 0) xs
    c1 r1 r6 (0 : xs) = c5 (n r1 0) (n r6 1) (n r6 0) xs
    c2 r2 r3 r9 [] = c2 r2 r3 r9 [0]
    c2 r2 r3 r9 (-1 : xs) = c6 (n r3 0) (n r9 1) xs
    c2 r2 r3 r9 (0 : xs) = c8 (n r3 0) (n r2 0) (n r3 1) xs
    c2 r2 r3 r9 (1 : xs) = c9 (n r2 0) (n r3 1) xs
    c3 r2 r7 [] = c3 r2 r7 [0]
    c3 r2 r7 (0 : xs) = c8 (n r7 0) (n r2 0) (n r7 1) xs
    c3 r2 r7 (1 : xs) = c9 (n r2 0) (n r7 1) xs
    c4 r4 r6 [] = r4 []
    c4 r4 r6 (-1 : xs) = c3 (n r6 1) (n r6 0) xs
    c4 r4 r6 (0 : xs) = c5 (n r4 0) (n r6 1) (n r6 0) xs
    c4 r4 r6 (1 : xs) = c1 (n r4 1) (n r4 0) xs
    c5 r4 r8 r9 [] = r4 []
    c5 r4 r8 r9 (-1 : xs) = c6 (n r8 0) (n r9 1) xs
    c5 r4 r8 r9 (0 : xs) = c4 (n r4 0) (n r8 0) xs
    c5 r4 r8 r9 (1 : xs) = c1 (n r4 1) (n r4 0) xs
    c6 r4 r14 [] = r4 []
    c6 r4 r14 (0 : xs) = c4 (n r4 0) (n r14 0) xs
    c6 r4 r14 (1 : xs) = c1 (n r4 1) (n r4 0) xs
    c7 r5 r8 [] = r5 []
    c7 r5 r8 (-1 : xs) = c6 (n r8 0) (n r5 1) xs
    c7 r5 r8 (0 : xs) = c4 (n r5 0) (n r8 0) xs
    c7 r5 r8 (1 : xs) = c1 (n r5 1) (n r5 0) xs
    c8 r6 r10 r12 [] = r12 []
    c8 r6 r10 r12 (-1 : xs) = c3 (n r6 1) (n r6 0) xs
    c8 r6 r10 r12 (0 : xs) = c5 (n r12 0) (n r6 1) (n r6 0) xs
    c8 r6 r10 r12 (1 : xs) = c1 (n r10 0) (n r12 0) xs
    c9 r11 r13 [] = c9 r11 r13 [0]
    c9 r11 r13 (-1 : xs) = c3 (n r11 0) (n r13 0) xs
    c9 r11 r13 (0 : xs) = c2 (n r11 1) (n r11 0) (n r13 0) xs
